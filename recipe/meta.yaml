package:
    name: h5py

  {% if GIT_DESCRIBE_NUMBER|int == 0 %}
    version: {{GIT_DESCRIBE_TAG}}
  {% else %}
    # If we're using a non-tagged revision, append '.postN' to the version
    version: {{GIT_DESCRIBE_TAG}}.post{{GIT_DESCRIBE_NUMBER}}
  {% endif %}
  
source:
  git_url: https://github.com/h5py/h5py
  git_tag: 2.6.0

  ## Note: The logic above works for non-tagged revisions, too:
  #git_tag: HEAD
  
  patches:
    # Patch a test that appears to be failing in some cases.
    # This patch has been submitted to upstream.
    # See the linked PR for more information.
    #
    # https://github.com/h5py/h5py/pull/697
    #
    - h5py_tests_old_test_file.py.patch
    - h5py_win_setup_build.py.patch

build:
  # The 'majorminor' filter just converts X.Y.Z --> XY
  # (See recipe/jinja_config.py)
  {% set py_xx = installed['python']['version'] | majorminor %}
  {% set np_xx = installed['numpy']['version']  | majorminor %}
  
  number: 4
  string: np{{ np_xx }}py{{ py_xx }}_{{ PKG_BUILDNUM }}
  
requirements:
  build:

    # We constrain these dependencies, but don't require exact versions.
    # The user will further constrain some of these to an exact version, using either:
    # conda build --build-config=pinned.yaml h5py
    # conda build --bootstrap=my-env h5py

    - python >=2.7,<3|>=3.2
    - numpy >=1.6.1
    - hdf5 >=1.8.4
    - cython >=0.19
    - six
    - pkgconfig

  run:
    # We don't require the exact version for each of these, but we do need to 
    # restrict to versions that are compatible with the build.
    # The 'compatible' filter just converts X.Y.Z --> X.Y
    # (See recipe/jinja_config.py)

    - python    {{ installed['python']['version'] | compatible    }}
    - numpy     {{ installed['numpy']['version']  | compatible    }},>=1.6.1
    - hdf5      {{ installed['hdf5']['version']   | compatible(3) }} # HDF5 ABI depends on all three parts: X.Y.Z
    - six       {{ installed['six']['version']    | compatible    }}
    - unittest2 # [py26]

test:
  imports:
    - h5py

about:
  home: http://www.h5py.org/
  license: BSD 3-Clause
  license_file: licenses/license.txt
  summary: Read and write HDF5 files from Python.

extra:
  recipe-maintainers:
    - jakirkham
